plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'

    // editor config 플러그인
    id 'org.ec4j.editorconfig' version '0.0.3'

    // checkstyle 플러그인
    id 'checkstyle'

    // sonar cloud 플러그인
    id "org.sonarqube" version "4.2.1.3168"
}

group = 'mju.sw'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

editorconfig {
    excludes = ['build']
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
    toolVersion = "9.2"
}

check.dependsOn editorconfigCheck

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

// sonar Cloud
sonarqube {
    properties {
        property "sonar.projectKey", "MJU-MICRO_MICRO_Server"
        property "sonar.organization", "mju-micro"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    // docker compose
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}


