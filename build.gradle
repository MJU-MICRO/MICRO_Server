plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'checkstyle'
    id "org.sonarqube" version "4.2.1.3168"
    id 'jacoco'
}

group = 'mju.sw'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
    toolVersion = "9.2"
}
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sonarqube {
    properties {
        property "sonar.projectKey", "MJU-MICRO_MICRO_Server"
        property "sonar.organization", "mju-micro"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.java.checkstyle.reportPaths', 'build/reports/checkstyle/main.xml'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // docker compose
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // mysql (개발 db)
    runtimeOnly 'com.mysql:mysql-connector-j'

    // mariadb (운영 db)
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // h2 (테스트 db)
    implementation 'com.h2database:h2'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
